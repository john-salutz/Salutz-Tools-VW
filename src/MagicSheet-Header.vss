{//////////////////////////////////////////////////////////////////////////////
//  Developed by John Salutz, (c) 2020. Please share freely.
//
//  Creates a header for use on a magic sheet
//////////////////////////////////////////////////////////////////////////////}

{//////////////////////////////////////////////////////////////////////////////
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//  <https://www.gnu.org/licenses/>
//////////////////////////////////////////////////////////////////////////////}

PROCEDURE MagicSheet_Header;

CONST
	RGBmax = 65535;

VAR
	{Standard variables}
	s_ObjName                                               : STRING;
	h_Obj,h_ObjRecord,h_ObjWall                             : HANDLE;
	b_Result                                                : BOOLEAN;
	i_Counter                                               : INTEGER;
	{Script specific variables}
	pt1,pt2                                                 : POINT;

{===== LOCAL FUNCTION DECLARATIONS =====}

{// See SalutzToolsFunctions.vss for additional fuctions //}
{$INCLUDE SalutzToolsFunctions.vss}

{====================================}
{------------- < MAIN > -------------}
{====================================}

{// Retrieve plug-in object information //}
BEGIN IF GetCustomObjectInfo(s_ObjName,h_Obj,h_ObjRecord,h_ObjWall) THEN BEGIN
	Set_Version_Info('0 . 5 . 2');
	Use_PIO_Text_Attributes(h_Obj);

	{===== Boundary Setup =====}
	pt1.X := -1*PSCALE;
	pt1.Y := 0*PSCALE;
	pt2.X := 1*PSCALE;
	pt2.Y := -0.25*PSCALE;

	{===== Draw Objects =====}
	{Outer Rectangle}
	Rect(pt1.X,pt1.Y,pt2.X,pt2.Y);
	{Inner Rectangle}
	RRect(
	      pt1.X+0.025*PSCALE,pt1.Y-0.05*PSCALE,
	      pt2.X-0.025*PSCALE,pt2.Y+0.025*PSCALE,0.125*PSCALE,0.125*PSCALE
	      );
	Set_Background_WtoB(LNewObj,0);
	SetLW(LNewObj,0);
	SetLSN(LNewObj,0);
	SetOpacity(LNewObj,85);
	GetBBox(LNewObj,pt1.X,pt1.Y,pt2.X,pt2.Y);
	PushAttrs; {((((((((((((((((((((((((((((((((((((((((}

	{// Text Setup //}
	TextVerticalAlign(3);
	TextSize(9*PSCALE);
	FillPat(0);
	Pen_WtoB(1);
	TextFace([]);
	{System Name}
	IF PSYSTEMNAME <> '' THEN BEGIN
		TextOrigin(pt1.X,pt2.Y-((pt2.Y-pt1.Y)/2));
		CreateText(Concat(' ',PSYSTEMNAME));
		SetTextJust(LNewObj,1);
	END;
	{Color Name}
	IF PCOLOR <> '' THEN BEGIN
		TextOrigin(pt2.X,pt2.Y-((pt2.Y-pt1.Y)/2));
		CreateText(Concat(PCOLOR,' '));
		SetTextJust(LNewObj,3);
	END;
	PopAttrs; {))))))))))))))))))))))))))))))))))))))))}

END; END; Run(MagicSheet_Header);
